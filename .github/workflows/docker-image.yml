name: Docker Image CI

on:
  push:
    branches: [ "main" , "no-poetry"]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: clustering-image
      IMAGE_TAG: ${{ github.run_number }} # or use `IMAGE_TAG: latest` if you want

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME:$IMAGE_TAG

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Tag the image
      run: docker tag $IMAGE_NAME:$IMAGE_TAG ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

    - name: Push to Docker Hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: clustering-image
      IMAGE_TAG: ${{ needs.build.outputs.image_tag }}
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          IMAGE_NAME=clustering-image
          IMAGE_TAG=${{ github.run_number }}
          DOCKER_USER=${{ secrets.DOCKERHUB_USERNAME }}
          sudo docker rm -f clustering-container || true
          sudo docker rmi $DOCKER_USER/$IMAGE_NAME:$IMAGE_TAG || true
          sudo docker pull $DOCKER_USER/$IMAGE_NAME:$IMAGE_TAG
          sudo docker run --name clustering-container -p 3002:3002 --restart=always -d $DOCKER_USER/$IMAGE_NAME:$IMAGE_TAG

